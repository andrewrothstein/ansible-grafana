---
- include_role:
    name: andrewrothstein.unarchive-deps
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: check for installation at {{ grafana_install_dir }}
  become: true
  stat:
    path: '{{ grafana_install_dir }}'
  changed_when: false
  register: grafana_binary

- when: not grafana_binary.stat.exists
  block:
    - name: downloading {{ grafana_tgz_url }}
      become: true
      become_user: root
      get_url:
        url: '{{ grafana_tgz_url }}'
        dest: '{{ grafana_tmp_tgz }}'
        checksum: '{{ grafana_checksum }}'
    - name: unarchiving {{ grafana_tmp_tgz }} to {{ grafana_parent_install_dir }}
      become: true
      become_user: root
      unarchive:
        src: '{{ grafana_tmp_tgz }}'
        dest: '{{ grafana_parent_install_dir }}'
        creates: '{{ grafana_install_dir }}'
  always:
    - name: deleting {{ grafana_tmp_tgz }}
      become: true
      become_user: root
      file:
        path: '{{ grafana_tmp_tgz }}'
        state: absent

- name: linking {{ grafana_link_dir }} to {{ grafana_install_dir }}
  become: true
  become_user: root
  file:
    src: '{{ grafana_install_dir }}'
    dest: '{{ grafana_link_dir }}'
    state: link

- name: add to login shell path...
  become: true
  become_user: root
  with_items:
    - f: grafana.sh
      d: /etc/profile.d
  template:
    src: '{{ item.f }}.j2'
    dest: '{{ item.d }}/{{ item.f }}'
    mode: '{{ item.m|default("0644") }}'
